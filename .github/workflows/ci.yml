name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache virtual environment
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-

    - name: Create virtual environment and install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install -e .[database,api,dev,test]

    - name: Run linting and quality checks
      run: |
        source .venv/bin/activate
        echo "üîç Step 1/4: Code Formatting (Black)..."
        black --check src/ tests/
        echo "‚úÖ Black formatting: PASSED"
        echo ""
        echo "üîç Step 2/4: Import Sorting (isort)..."
        isort --check-only src/ tests/
        echo "‚úÖ Import sorting: PASSED" 
        echo ""
        echo "üîç Step 3/4: Code Quality (Pylint)..."
        pylint_output=$(pylint src/ticker_converter dags/ --score=yes)
        echo "$pylint_output"
        if echo "$pylint_output" | grep -q "10.00/10"; then
          echo "‚úÖ Pylint score: 10.00/10 PASSED"
        else
          echo "‚ùå Pylint score: FAILED (must be 10.00/10)"
          exit 1
        fi
        echo ""
        echo "üîç Step 4/4: Type Checking (MyPy)..."
        mypy src/ticker_converter
        echo "‚úÖ MyPy type checking: PASSED"

    - name: Run tests with coverage reporting
      run: |
        source .venv/bin/activate
        echo "üß™ Running test suite with coverage validation..."
        python -m pytest tests/ -v --cov=src/ticker_converter --cov-report=xml --cov-report=term-missing --cov-fail-under=67 --ignore=tests/integration
        echo "‚úÖ Tests and coverage: PASSED"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
