name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache virtual environment
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-venv-

    - name: Create virtual environment and install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install -e .[test]

    - name: Install system-level quality tools (optional)
      run: |
        # Install sqlfluff for enhanced SQL linting
        source .venv/bin/activate
        pip install sqlfluff
        # Skip checkmake for now due to upstream repository issues
        echo "ℹ️  checkmake skipped due to upstream repository path conflicts (graceful degradation)"

    - name: Run enhanced quality gate pipeline
      run: |
        source .venv/bin/activate
        # Create minimal .env for validation (CI environment)
        echo "POSTGRES_HOST=localhost" > .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "POSTGRES_DB=ticker_converter" >> .env
        echo "POSTGRES_USER=ticker_user" >> .env
        echo "POSTGRES_PASSWORD=ticker_password" >> .env
        echo "AIRFLOW_ADMIN_USERNAME=admin" >> .env
        echo "AIRFLOW_ADMIN_PASSWORD=admin_password" >> .env
        echo "AIRFLOW_ADMIN_EMAIL=admin@example.com" >> .env
        echo "AIRFLOW_ADMIN_FIRSTNAME=Admin" >> .env
        echo "AIRFLOW_ADMIN_LASTNAME=User" >> .env
        echo "AIRFLOW__API_AUTH__JWT_SECRET=test-jwt-secret" >> .env
        echo "ALPHA_VANTAGE_API_KEY=test_api_key" >> .env
        echo "AIRFLOW__CORE__DAGS_FOLDER=${{ github.workspace }}/dags" >> .env
        echo "DATABASE_URL=postgresql://ticker_user:ticker_password@localhost:5432/ticker_converter" >> .env
        
        # Run the comprehensive 7-stage quality pipeline
        make quality

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
